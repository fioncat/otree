# This was generated by ChatGPT.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment
  labels:
    app: example-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: example-app
  template:
    metadata:
      labels:
        app: example-app
    spec:
      containers:
      - name: example-container
        image: nginx:1.19.10
        ports:
        - containerPort: 80
        env:
        - name: EXAMPLE_ENV
          valueFrom:
            configMapKeyRef:
              name: example-config
              key: example-key
        volumeMounts:
        - name: example-secret-volume
          mountPath: /etc/secret
          readOnly: true
      volumes:
      - name: example-secret-volume
        secret:
          secretName: example-secret
      serviceAccountName: example-serviceaccount
---
apiVersion: v1
kind: Service
metadata:
  name: example-service
  labels:
    app: example-app
spec:
  selector:
    app: example-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-config
  labels:
    app: example-app
data:
  example-key: "example-value"
---
apiVersion: v1
kind: Secret
metadata:
  name: example-secret
  labels:
    app: example-app
type: Opaque
data:
  username: c3VwZXJ1c2Vy
  password: c3VwZXJzZWNyZXQ=
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-serviceaccount
  labels:
    app: example-app
secrets:
  - name: example-secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: resource-operator
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec", "pods/portforward", "pods/proxy"]
  verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: resource-operator-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: example-serviceaccount
  namespace: default
roleRef:
  kind: Role
  name: resource-operator
  apiGroup: rbac.authorization.k8s.io
